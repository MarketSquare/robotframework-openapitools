*** Settings ***
Documentation       This suite runs against an altered OpenAPI spec that is derived from
...                 the one generated by FastAPI to be able to test code branches that
...                 will not be covered using the normal spec.

Variables           ${ROOT}/tests/variables.py
Library             OpenApiDriver
...                     source=${ROOT}/tests/files/altered_openapi.json
...                     origin=http://localhost:8000
...                     base_path=${EMPTY}
...                     mappings_path=${ROOT}/tests/user_implemented/custom_user_mappings.py
...                     response_validation=STRICT
...                     require_body_for_invalid_url=${TRUE}
...                     extra_headers=${API_KEY}
...                     faker_locale=nl_NL
...                     default_id_property_name=identification

Test Template       Validate Test Endpoint Keyword

Test Tags           rf7


*** Variables ***
@{EXPECTED_FAILURES}
...                     GET / 200    # Unsupported MIME type for response schema
...                     GET /reactions/ 200    # /reactions/ path not implemented on API server
...                     POST /events/ 201    # added 'event_number' property to Event schema
...                     POST /employees 201    # added 'team' property to Employee schema
...                     GET /employees/{employee_id} 200    # added 'team' property to EmployeeDetails schema
...                     PUT /wagegroups/{wagegroup_id} 200    # Unsupported MIME type for requestBody
...                     PUT /wagegroups/{wagegroup_id} 404    # Unsupported MIME type for requestBody
...                     PUT /wagegroups/{wagegroup_id} 418    # Unsupported MIME type for requestBody
...                     PUT /wagegroups/{wagegroup_id} 422    # Unsupported MIME type for requestBody


*** Test Cases ***
# robotcode: ignore[ModelError, VariableNotReplaced]
Test Endpoint for ${method} on ${path} where ${status_code} is expected


*** Keywords ***
Validate Test Endpoint Keyword
    [Arguments]    ${path}    ${method}    ${status_code}
    IF    ${status_code} == 404
        VAR    ${operation}    ${method}${SPACE}${path}${SPACE}${status_code}
        IF    $operation in $EXPECTED_FAILURES
            Run Keyword And Expect Error    *
            ...    Test Invalid Url    path=${path}    method=${method}
        ELSE
            Test Invalid Url    path=${path}    method=${method}
        END
    ELSE
        VAR    ${operation}    ${method}${SPACE}${path}${SPACE}${status_code}
        IF    $operation in $EXPECTED_FAILURES
            Run Keyword And Expect Error    *
            ...    Test Endpoint    path=${path}    method=${method}    status_code=${status_code}
        ELSE
            Test Endpoint    path=${path}    method=${method}    status_code=${status_code}
        END
    END
